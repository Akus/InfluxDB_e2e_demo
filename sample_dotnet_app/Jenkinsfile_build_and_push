pipeline {
    agent any
    parameters {
        string(name: 'IMAGE_TAG', defaultValue: 'latest', description: 'Docker image tag to use')
    }        
    environment {
        KUBE_CONFIG = credentials('eks_kubeconfig') // if using Jenkins credentials for kubeconfig
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Determine Image Tag from csproj') {
            steps {
                script {
                    def csprojPath = 'sample_dotnet_app/MyMicroservice.csproj'
                    def csprojContent = readFile(csprojPath)
                    def versionMatch = csprojContent =~ /<Version>(.*?)<\/Version>/
                    def imageTag = versionMatch ? versionMatch[0][1] : 'latest'
                    env.DOCKER_IMAGE_TAG = imageTag
                    env.DOCKER_IMAGE = "akosbodor/csharp-microservice:${env.DOCKER_IMAGE_TAG}"
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                bat '''
                cd sample_dotnet_app
                docker build -t %DOCKER_IMAGE% .
                '''
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                    bat '''
                    docker login -u %DOCKERHUB_USER% -p %DOCKERHUB_PASS%
                    docker tag %DOCKER_IMAGE% %DOCKER_IMAGE%
                    docker push %DOCKER_IMAGE%
                    '''
                }
            }
        }
    }
}