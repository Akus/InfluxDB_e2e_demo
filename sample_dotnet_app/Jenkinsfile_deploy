pipeline {
    agent any    
    parameters {
        string(name: 'DOCKER_IMAGE_TAG', defaultValue: 'latest', description: 'Docker image tag to deploy')
    }
    environment {
        DOCKER_IMAGE_NAME = "akosbodor/csharp-microservice"
        DOCKER_IMAGE = "${DOCKER_IMAGE_NAME}:${params.DOCKER_IMAGE_TAG}"
        KUBE_CONFIG = credentials('eks_kubeconfig')
    }
    stages {
        stage('Deploy to EKS') {
            steps {
                withCredentials([
                    string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    bat '''
                    cd sample_dotnet_app
                    aws eks update-kubeconfig --region eu-central-1 --name akos-influxdb-eks-development
                    kubectl config use-context arn:aws:eks:eu-central-1:823514127427:cluster/akos-influxdb-eks-development
                    kubectl get nodes
                    kubectl version
                    kubectl apply -f deployment.yaml
                    kubectl set image deployment/csharp-microservice csharp-microservice=%DOCKER_IMAGE%
                    '''
                }
            }
        }
    }
}